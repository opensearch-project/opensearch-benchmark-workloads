    {
      "name": "append-no-conflicts",
      "description": "Indexes the whole document corpus using a setup that will lead to a larger indexing throughput than the default settings and produce a smaller index (higher compression rate). Document ids are unique so all index operations are append only. After that a couple of queries are run.",
      "default": true,
      "schedule": [
        {
          "operation": "delete-index"
        },
        {
          "operation": {
            "operation-type": "create-index",
            "settings": {%- if index_settings is defined %} {{index_settings | tojson}} {%- else %} {
              "index.codec": "best_compression",
              "index.refresh_interval": "30s",
              "index.translog.flush_threshold_size": "4g"
            }{%- endif %}
          }
        },
        {
          "name": "check-cluster-health",
          "operation": {
            "operation-type": "cluster-health",
            "index": "nyc_taxis",
            "request-params": {
              "wait_for_status": "{{cluster_health | default('green')}}",
              "wait_for_no_relocating_shards": "true"
            }
          }
        },
        {
          "operation": "index",
          "warmup-time-period": 240,
          "clients": {{bulk_indexing_clients | default(8)}}
        },
        {
          "name": "refresh-after-index",
          "operation": "refresh",
          "clients": 1
        },
        {
          "operation": "default",
          "clients": 1,
          "warmup-iterations": 50,
          "iterations": 100,
          "target-throughput": 3
        },
        {
          "operation": "range",
          "clients": 1,
          "warmup-iterations": 50,
          "iterations": 100,
          "target-throughput": 1
        },
        {
          "operation": "distance_amount_agg",
          "clients": 1,
          "warmup-iterations": 50,
          "iterations": 100,
          "target-throughput": 2
        },
        {
          "operation": "date_histogram_agg",
          "clients": 1,
          "warmup-iterations": 50,
          "iterations": 100,
          "target-throughput": 2
        }
      ]
    },
    {
      "name": "append-no-conflicts-index-only",
      "description": "Indexes the whole document corpus using a setup that will lead to a larger indexing throughput than the default settings and produce a smaller index (higher compression rate). Document ids are unique so all index operations are append only.",
      "schedule": [
        {
          "operation": "delete-index"
        },
        {
          "operation": {
            "operation-type": "create-index",
            "settings": {%- if index_settings is defined %} {{index_settings | tojson}} {%- else %} {
              "index.codec": "best_compression",
              "index.refresh_interval": "30s",
              "index.translog.flush_threshold_size": "4g"
            }{%- endif %}
          }
        },
        {
          "name": "check-cluster-health",
          "operation": {
            "operation-type": "cluster-health",
            "index": "nyc_taxis",
            "request-params": {
              "wait_for_status": "{{cluster_health | default('green')}}",
              "wait_for_no_relocating_shards": "true"
            }
          }
        },
        {
          "operation": "index",
          "warmup-time-period": 240,
          "clients": {{bulk_indexing_clients | default(8)}}
        },
        {
          "name": "refresh-after-index",
          "operation": "refresh",
          "clients": 1
        }
      ]
    },
    {
      "name": "append-sorted-no-conflicts-index-only",
      "description": "Indexes the whole document corpus in an index sorted by pickup_datetime field in descending order (most recent first) and using a setup that will lead to a larger indexing throughput than the default settings and produce a smaller index (higher compression rate). Document ids are unique so all index operations are append only.",
      "schedule": [
        {
          "operation": "delete-index"
        },
        {
          "operation": {
            "operation-type": "create-index",
            "settings": {
              "index.codec": "best_compression",
              "index.refresh_interval": "30s",
              "index.translog.flush_threshold_size": "4g",
              "index.sort.field": "pickup_datetime",
              "index.sort.order": "desc"
            }
          }
        },
        {
          "name": "check-cluster-health",
          "operation": {
            "operation-type": "cluster-health",
            "index": "nyc_taxis",
            "request-params": {
              "wait_for_status": "{{cluster_health | default('green')}}",
              "wait_for_no_relocating_shards": "true"
            }
          }
        },
        {
          "operation": "index",
          "warmup-time-period": 240,
          "clients": {{bulk_indexing_clients | default(8)}}
        },
        {
          "name": "refresh-after-index",
          "operation": "refresh",
          "clients": 1
        }
      ]
    },
{% set ml_job_id="benchmark_ml_job" %}
{% set ml_feed_id="benchmark_nyc_taxis_feed" %}
    {
      "name": "append-ml",
      "description": "Indexes the whole document corpus and executes a machine learning job",
      "schedule": [
        {
          "operation": "delete-index"
        },
        {
          "operation": {
            "operation-type": "create-index",
            "settings": {%- if index_settings is defined %} {{index_settings | tojson}} {%- else %} {
              "index.codec": "best_compression",
              "index.refresh_interval": "30s",
              "index.translog.flush_threshold_size": "4g"
            }{%- endif %}
          }
        },
        {
          "operation": {
            "operation-type": "delete-ml-datafeed",
            "datafeed-id": "{{ml_feed_id}}",
            "force": true
          }
        },
        {
          "operation": {
            "operation-type": "delete-ml-job",
            "job-id": "{{ml_job_id}}",
            "force": true
          }
        },
        {
          "operation": {
            "operation-type": "create-ml-job",
            "job-id": "{{ml_job_id}}",
            "body": {
              "description": "NYC Taxis (count)",
              "analysis_config": {
                "bucket_span": "1h",
                "summary_count_field_name": "doc_count",
                "detectors": [
                  {
                    "detector_description": "count",
                    "function": "count"
                  }
                ]
              },
              "data_description": {
                "time_field": "pickup_datetime",
                "time_format": "epoch_ms"
              },
              "model_plot_config": {
                "enabled": true
              }
            }
          }
        },
        {
          "operation": {
            "operation-type": "open-ml-job",
            "job-id": "{{ml_job_id}}"
          }
        },
        {
          "operation": {
            "operation-type": "create-ml-datafeed",
            "datafeed-id": "{{ml_feed_id}}",
            "body": {
              "job_id": "{{ml_job_id}}",
              "indices": [
                "nyc_taxis"
              ],
              "query": {
                "match_all": {
                  "boost": 1
                }
              },
              "aggregations": {
                "buckets": {
                  "date_histogram": {
                    "field": "pickup_datetime",
                    "interval": 3600000,
                    "offset": 0,
                    "order": {
                      "_key": "asc"
                    },
                    "keyed": false,
                    "min_doc_count": 0
                  },
                  "aggregations": {
                    "pickup_datetime": {
                      "max": {
                        "field": "pickup_datetime"
                      }
                    }
                  }
                }
              },
              "scroll_size": 1000,
              "chunking_config": {
                "mode": "manual",
                "time_span": "3600000000ms"
              }
            }
          }
        },
        {
          "name": "check-cluster-health",
          "operation": {
            "operation-type": "cluster-health",
            "index": "nyc_taxis",
            "request-params": {
              "wait_for_status": "{{cluster_health | default('green')}}",
              "wait_for_no_relocating_shards": "true"
            }
          }
        },
        {
          "operation": "index",
          "warmup-time-period": 240,
          "clients": {{bulk_indexing_clients | default(8)}}
        },
        {
          "name": "refresh-after-index",
          "operation": "refresh"
        },
        {
          "operation": "force-merge"
        },
        {
          "name": "refresh-after-force-merge",
          "operation": "refresh"
        },
	    {
          "operation": {
            "operation-type": "start-ml-datafeed",
            "datafeed-id": "{{ml_feed_id}}",
            "body": {
              "end": "now"
            }
          }
        },
        {
          "operation": {
            "operation-type": "wait-for-ml-lookback",
            "include-in-reporting": false,
            "datafeed-id": "{{ml_feed_id}}"
          }
        },
        {
          "operation": {
            "operation-type": "close-ml-job",
            "job-id": "{{ml_job_id}}"
          }
        }
      ]
    }
