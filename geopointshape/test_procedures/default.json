    {
      "name": "append-no-conflicts",
      "description": "Indexes the whole document corpus using OpenSearch default settings. We only adjust the number of replicas as we benchmark a single node cluster and Benchmark will only start the benchmark if the cluster turns green. Document ids are unique so all index operations are append only. After that a couple of queries are run.",
      "default": true,
      "schedule": [
        {{ benchmark.collect(parts="../../common_operations/workload_setup.json") }},
        {
          "operation": "polygon",
          "warmup-iterations": {{ polygon_warmup_iterations or warmup_iterations | default(200) | tojson }},
          "iterations": {{ polygon_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ polygon_target_throughput or target_throughput | default(2) | tojson }},
          "clients": {{ polygon_search_clients or search_clients | default(1) }}
        },
        {
          "operation": "bbox",
          "warmup-iterations": {{ bbox_warmup_iterations or warmup_iterations | default(200) | tojson }},
          "iterations": {{ bbox_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ bbox_target_throughput or target_throughput | default(2) | tojson }},
          "clients": {{ bbox_search_clients or search_clients | default(1) }}
        }
      ]
    },
    {
      "name": "append-no-conflicts-index-only",
      "description": "Indexes the whole document corpus using OpenSearch default settings. We only adjust the number of replicas as we benchmark a single node cluster and Benchmark will only start the benchmark if the cluster turns green. Document ids are unique so all index operations are append only.",
      "schedule": [
        {{ benchmark.collect(parts="../../common_operations/workload_setup.json") }}
      ]
    },
    {
      "name": "append-fast-with-conflicts",
      "description": "Indexes the whole document corpus using a setup that will lead to a larger indexing throughput than the default settings. Benchmark will produce duplicate ids in 25% of all documents (not configurable) so we can simulate a scenario with appends most of the time and some updates in between.",
      "schedule": [
        {% with default_index_settings={
          "index.refresh_interval": "30s",
          "index.number_of_shards": number_of_shards | default(6),
          "index.translog.flush_threshold_size": "4g"
        } %}
        {{ benchmark.collect(parts="../../common_operations/workload_setup.json") }}
        {% endwith %}
      ]
    }
