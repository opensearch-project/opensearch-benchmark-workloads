    {
      "name": "append-no-conflicts",
      "description": "Indexes the whole document corpus using OpenSearch default settings. We only adjust the number of replicas as we benchmark a single node cluster and OpenSearch Benchmark will only start the benchmark if the cluster turns green and we want to ensure that we don't use the query cache. Document ids are unique so all index operations are append only. After that a couple of queries are run.",
      "default": true,
      "schedule": [
        {
          "operation": "delete-index"
        },
        {
          "operation": {
            "operation-type": "create-index",
            "settings": {{index_settings | default({}) | tojson}}
          }
        },
        {
          "name": "check-cluster-health",
          "operation": {
            "operation-type": "cluster-health",
            "index": "queries",
            "request-params": {
              "wait_for_status": "{{cluster_health | default('green')}}",
              "wait_for_no_relocating_shards": "true"
            },
            "retry-until-success": true
          }
        },
        {
          "operation": "index",
          "#COMMENT": "This is an incredibly short warmup time period but it is necessary to get also measurement samples. As this benchmark is rather about search than indexing this is ok.",
          "warmup-time-period": 10,
          "clients": {{bulk_indexing_clients | default(8)}},
          "ignore-response-error-level": "{{error_level | default('non-fatal')}}"
        },
        {
          "name": "refresh-after-index",
          "operation": "refresh"
        },
        {
          "operation": {
            "operation-type": "force-merge",
            "max-num-segments": {{ max_num_segments | default(-1) }},
            "request-timeout": 7200
          }
        },
        {
          "name": "refresh-after-force-merge",
          "operation": "refresh"
        },
        {
          "name": "wait-until-merges-finish",
          "operation": {
            "operation-type": "index-stats",
            "index": "_all",
            "condition": {
              "path": "_all.total.merges.current",
              "expected-value": 0
            },
            "retry-until-success": true,
            "include-in-reporting": false
          }
        },
        {
          "operation": "percolator_with_content_president_bush",
          "warmup-iterations": {{ percolator_with_content_president_bush_warmup_iterations or warmup_iterations | default(100) | tojson }},
          "iterations": {{ percolator_with_content_president_bush_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ percolator_with_content_president_bush_target_throughput or target_throughput | default(50) | tojson }},
          "clients": {{ percolator_with_content_president_bush_search_clients or search_clients | default(1) }}
        },
        {
          "operation": "percolator_with_content_saddam_hussein",
          "warmup-iterations": {{ percolator_with_content_saddam_hussein_warmup_iterations or warmup_iterations | default(100) | tojson }},
          "iterations": {{ percolator_with_content_saddam_hussein_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ percolator_with_content_saddam_hussein_target_throughput or target_throughput | default(50) | tojson }},
          "clients": {{ percolator_with_content_saddam_hussein_search_clients or search_clients | default(1) }}
        },
        {
          "operation": "percolator_with_content_hurricane_katrina",
          "warmup-iterations": {{ percolator_with_content_hurricane_katrina_warmup_iterations or warmup_iterations | default(100) | tojson }},
          "iterations": {{ percolator_with_content_hurricane_katrina_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ percolator_with_content_hurricane_katrina_target_throughput or target_throughput | default(50) | tojson }},
          "clients": {{ percolator_with_content_hurricane_katrina_search_clients or search_clients | default(1) }}
        },
        {
          "operation": "percolator_with_content_google",
          "warmup-iterations": {{ percolator_with_content_google_warmup_iterations or warmup_iterations | default(100) | tojson }},
          "iterations": {{ percolator_with_content_google_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ percolator_with_content_google_target_throughput or target_throughput | default(27) | tojson }},
          "clients": {{ percolator_with_content_google_search_clients or search_clients | default(1) }}
        },
        {
          "operation": "percolator_no_score_with_content_google",
          "warmup-iterations": {{ percolator_no_score_with_content_google_warmup_iterations or warmup_iterations | default(100) | tojson }},
          "iterations": {{ percolator_no_score_with_content_google_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ percolator_no_score_with_content_google_target_throughput or target_throughput | default(100) | tojson }},
          "clients": {{ percolator_no_score_with_content_google_search_clients or search_clients | default(1) }}
        },
        {
          "operation": "percolator_with_highlighting",
          "warmup-iterations": {{ percolator_with_highlighting_warmup_iterations or warmup_iterations | default(100) | tojson }},
          "iterations": {{ percolator_with_highlighting_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ percolator_with_highlighting_target_throughput or target_throughput | default(50) | tojson }},
          "clients": {{ percolator_with_highlighting_search_clients or search_clients | default(1) }}
        },
        {
          "operation": "percolator_with_content_ignore_me",
          "warmup-iterations": {{ percolator_with_content_ignore_me_warmup_iterations or warmup_iterations | default(10) | tojson }},
          "iterations": {{ percolator_with_content_ignore_me_iterations or iterations | default(100) | tojson }},
          "#COMMENT": "Be aware that we specify *target-interval* here! This means we issue one query every 12 seconds",
          "target-interval": 12,
          "clients": {{ percolator_with_content_ignore_me_search_clients or search_clients | default(1) }}
        },
        {
          "operation": "percolator_no_score_with_content_ignore_me",
          "warmup-iterations": {{ percolator_no_score_with_content_ignore_me_warmup_iterations or warmup_iterations | default(100) | tojson }},
          "iterations": {{ percolator_no_score_with_content_ignore_me_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ percolator_no_score_with_content_ignore_me_target_throughput or target_throughput | default(15) | tojson }},
          "clients": {{ percolator_no_score_with_content_ignore_me_search_clients or search_clients | default(1) }}
        }
      ]
    }
