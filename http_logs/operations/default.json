    {
      "name": "index-append",
      "operation-type": "bulk",
      "bulk-size": {{bulk_size | default(5000)}},
      "ingest-percentage": {{ingest_percentage | default(100)}},
      "corpora": "http_logs"
    },
    {
      "name": "index-append-with-ingest-baseline-pipeline",
      "operation-type": "bulk",
      "bulk-size": {{bulk_size | default(5000)}},
      "ingest-percentage": {{ingest_percentage | default(100)}},
      "pipeline": "http-log-baseline-pipeline",
      "corpora": "http_logs"
    },
    {
      "name": "index-append-with-ingest-grok-pipeline",
      "operation-type": "bulk",
      "bulk-size": {{bulk_size | default(5000)}},
      "ingest-percentage": {{ingest_percentage | default(100)}},
      "pipeline": "http-log-grok-pipeline",
      "corpora": "http_logs_unparsed"
    },
    {
      "name": "index-append-with-ingest-geoip-pipeline",
      "operation-type": "bulk",
      "bulk-size": {{bulk_size | default(5000)}},
      "ingest-percentage": {{ingest_percentage | default(100)}},
      "pipeline": "http-log-geoip-pipeline",
      "corpora": "http_logs"
    },
    {
      "name": "index-append-with-timestamp-pipeline",
      "operation-type": "bulk",
      "bulk-size": {{bulk_size | default(5000)}},
      "ingest-percentage": {{ingest_percentage | default(100)}},
      "pipeline": "timestamp-pipeline",
      "corpora": "http_logs_unparsed"
    },
    {
      "name": "update",
      "operation-type": "bulk",
      "bulk-size": {{bulk_size | default(5000)}},
      "ingest-percentage": {{ingest_percentage | default(100)}},
      "conflicts": "{{conflicts | default('random')}}",
      "on-conflict": "{{on_conflict | default('update')}}",
      "conflict-probability": {{conflict_probability | default(25)}},
      "recency": {{recency | default(0)}},
      "corpora": "http_logs"
    },
    {
      "name": "default",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "query": {
          "match_all": {}
        }
      }
    },
    {
      "name": "term",
      "operation-type": "search",
      "index": "logs-*",
      "request-timeout": 7200,
      "body": {
        "query": {
          "term": {
              "request.raw": {
                "value": "GET / HTTP/1.0"
              }
          }
        }
      },
      "detailed-results": true,
      "assertions": [
        {
          "property": "hits",
          "condition": "==",
          "value": 10000
        }
      ]
    },
    {
      "name": "multi-term-filter",
      "operation-type": "search",
      "index": "logs-*",
      "request-timeout": 7200,
      "body": {
        "query": {
          "bool": {
            "must": [
              {
                "term": {
                  "request.raw": {
                    "value": "GET / HTTP/1.0"
                  }
                }
              }
            ],
            "filter": [
              {
                "term": {
                  "status": 200
                }
              }
            ]
          }
        }
      },
      "detailed-results": true,
      "assertions": [
        {
          "property": "hits",
          "condition": "==",
          "value": 10000
        }
      ]
    },
    {
      "name": "range",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "query": {
          "range": {
            "@timestamp": {
              "gte": "now-{{'15-05-1998' | days_ago(now)}}d/d",
              "lt": "now/d"
            }
          }
        }
      },
      "detailed-results": true,
      "assertions": [
        {
          "property": "hits",
          "condition": "==",
          "value": 10000
        }
      ]
    },
    {
      "name": "200s-in-range",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "query": {
          "bool": {
            "must": [
              {
                "range": {
                  "@timestamp": {
                    "gte": "1998-05-01T00:00:00Z",
                    "lt": "1998-05-02T00:00:00Z"
                  }
                }
              },
              {
                "match": {
                  "status": "200"
                }
              }
            ]
          }
        }
      },
      "detailed-results": true,
      "assertions": [
        {
          "property": "hits",
          "condition": "==",
          "value": 10000
        }
      ]
    },
    {
      "name": "400s-in-range",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "query": {
          "bool": {
            "must": [
              {
                "range": {
                  "@timestamp": {
                    "gte": "1998-05-01T00:00:00Z",
                    "lt": "1998-05-02T00:00:00Z"
                  }
                }
              },
              {
                "match": {
                  "status": "400"
                }
              }
            ]
          }
        }
      },
      "detailed-results": true,
      "assertions": [
        {
          "property": "hits",
          "condition": "==",
          "value": 20
        }
      ]
    },
    {
      "name": "hourly_agg",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "size": 0,
        "aggs": {
          "by_hour": {
            "date_histogram": {
              "field": "@timestamp",
              "calendar_interval": "hour"
            }
          }
        }
      }
    },
    {
      "name": "multi_term_agg",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "size": 0,
        "query": {
          "range": {
            "@timestamp": {
              "gte": "1998-05-03T00:00:00Z",
              "lt": "1998-05-07T00:00:00Z"
            }
          }
        },
        "aggs": {
          "mterms": {
            "multi_terms": {
              "terms": [
                {"field": "clientip"},
                {"field": "status"},
                {"field": "size"}
              ]
            }
          }
        }
      }
    },
    {
      "name": "scroll",
      "operation-type": "search",
      "index": "logs-*",
      "pages": 25,
      "results-per-page": 1000,
      "body": {
        "query": {
          "match_all": {}
        }
      }
    },
    {
      "name": "desc_sort_size",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "query": {
          "match_all": {}
        },
        "sort" : [
          {"size" : "desc"}
        ]
      }
    },
    {
      "name": "asc_sort_size",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "query": {
          "match_all": {}
        },
        "sort" : [
          {"size" : "asc"}
        ]
      }
    },
    {
      "name": "desc_sort_timestamp",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "query": {
          "match_all": {}
        },
        "sort" : [
          {"@timestamp" : "desc"}
        ]
      }
    },
    {
      "name": "desc_sort_with_after_timestamp",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "track_total_hits": false,
        "query": {
          "match_all": {}
        },
        "sort" : [
          {"@timestamp" : "desc"}
        ],
        "search_after": ["1998-06-10"]
      }
    },
    {
      "name": "asc_sort_timestamp",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "query": {
          "match_all": {}
        },
        "sort" : [
          {"@timestamp" : "asc"}
        ]
      }
    },
    {
      "name": "asc_sort_with_after_timestamp",
      "operation-type": "search",
      "index": "logs-*",
      "body": {
        "track_total_hits": false,
        "query": {
          "match_all": {}
        },
        "sort" : [
          {"@timestamp" : "asc"}
        ],
        "search_after": ["1998-06-10"]
      }
    },
    {
      "name": "create-http-log-baseline-pipeline",
      "operation-type": "put-pipeline",
      "id": "http-log-baseline-pipeline",
      "body": {
        "description": "Process an the documents with a processor that does nothing. Baseline for overhead of pipeline.",
        "processors": [
          {
            "uppercase": {
              "field": "doesnotexist",
              "ignore_missing": true
            }
          }
        ]
      }
    },
    {
      "name": "create-http-log-grok-pipeline",
      "operation-type": "put-pipeline",
      "id": "http-log-grok-pipeline",
      "body": {
        "description": "Process an http log line with grok. Requires the `unparsed` data set.",
        "processors": [
          {
            "grok": {
              "field": "message",
              "patterns": [
                "%{IPORHOST:clientip} %{HTTPDUSER} %{USER} \\[%{TIMESTAMP_ISO8601:@timestamp}\\] \"(?:%{WORD} %{NOTSPACE:request}(?: HTTP/%{NUMBER})?|%{DATA})\" %{NUMBER:status} (?:%{NUMBER:size}|-)"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "create-http-log-geoip-pipeline",
      "operation-type": "put-pipeline",
      "id": "http-log-geoip-pipeline",
      "body": {
        "description": "Enrich the data with the geo-ip filter. Requires --opensearch-plugins='ingest-geoip'",
        "processors": [
          {
            "geoip": {
               "field": "clientip",
               "properties": [
                  "city_name",
                  "country_name",
                  "location"
                ]
            }
          }
        ]
      }
    },
    {
      "name": "create-timestamp-pipeline",
      "operation-type": "put-pipeline",
      "id": "timestamp-pipeline",
      "body": {
        "description": "Process the timestamp out of an http log line with grok. Requires the `unparsed` data set.",
        "processors": [
          {
            "grok": {
              "field": "message",
              "patterns": [
                "%{IPORHOST} %{HTTPDUSER} %{USER} \\[%{TIMESTAMP_ISO8601:@timestamp}\\] \"(?:%{WORD} %{NOTSPACE}(?: HTTP/%{NUMBER})?|%{DATA})\" %{NUMBER} (?:%{NUMBER}|-)"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "create-http-log-baseline-search-pipeline",
      "operation-type": "create-search-pipeline",
      "id": "http-log-baseline-search-pipeline",
      "body": {
        "description": "Process search requests with a pipeline that does nothing. Baseline for overhead of pipeline."
      }
    },
    {
      "name": "create-http-log-status-filter-search-pipeline",
      "operation-type": "create-search-pipeline",
      "id": "http-log-status-filter-search-pipeline",
      "body": {
        "description": "Process search requests by adding filters based on the status field.",
        "request_processors": [
          {
            "filter_query": {
              "description": "This processor is going to restrict to documents with a specific status code.",
              "query": {
                "term": {
                  "status": 200
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "create-http-log-rename-field-search-pipeline",
      "operation-type": "create-search-pipeline",
      "id": "http-log-rename-field-search-pipeline",
      "body": {
        "description": "Process search requests with a pipeline that renames the specified field.",
        "response_processors": [
          {
            "rename_field": {
              "field": "status",
              "target_field": "status_code"
            }
          }
        ]
      }
    },
    {
      "name": "create-http-log-rename-100-field-search-pipeline",
      "operation-type": "create-search-pipeline",
      "id": "http-log-rename-100-field-search-pipeline",
      "body": {
        "description": "Process search requests with a pipeline that renames the specified field 100 times.",
        "response_processors": [
          {% for i in range(1, 101) %}
          {
            "rename_field": {
              "field": "status",
              "target_field": "status_{{ i }}"
            }
          }{% if not loop.last %},{% endif %}
          {% endfor %}
        ]
      }
    },
    {
      "name": "create-http-log-dummy-scripting-search-pipeline",
      "operation-type": "create-search-pipeline",
      "id": "http-log-dummy-scripting-search-pipeline",
      "body": {
        "description": "Process search requests with a pipeline that does a dummy operation in script.",
        "request_processors": [
          {
            "script": {
              "lang": "painless",
              "source": "int size = ctx._source['size']; ctx._source['size'] = size;"
            }
          }
        ]
      }
    },    
    {
      "name": "create-http-log-100-dummy-scripting-search-pipeline",
      "operation-type": "create-search-pipeline",
      "id": "http-log-100-dummy-scripting-search-pipeline",
      "body": {
        "description": "Process search requests with a pipeline that does 100 dummy operations in script.",
        "request_processors": [
          {
            "script": {
              "lang": "painless",
              "source": "for (int i = 0; i < 50; i++) { ctx._source['size'] = ctx._source['size'] + 1; } for (int i = 0; i < 50; i++) { ctx._source['size'] = ctx._source['size'] - 1; }"
            }
          }
        ]
      }
    },      
    {
      "name": "create-http-log-all-processors-search-pipeline",
      "operation-type": "create-search-pipeline",
      "id": "http-log-all-processors-search-pipeline",
      "body": {
        "description": "Process search requests that filters on status, supports explain with request size is 10, and renames status field.",
        "request_processors": [
          {
            "filter_query": {
              "description": "This processor is going to restrict to documents with a specific status code.",
              "query": {
                "term": {
                  "status": 200
                }
              }
            }
          },
          {
            "script": {
              "lang": "painless",
              "source": "int size = ctx._source['size']; ctx._source['size'] = size;"
            }
          }
        ],
        "response_processors": [
          {
            "rename_field": {
              "field": "status",
              "target_field": "status_code"
            }
          }
        ]
      }
    }
